start_expr_or_stmt : (new_line_or_comment)? attribute | expression | block (new_line_or_comment)?
start_expr : (new_line_or_comment)? expression (new_line_or_comment)?
start : new_line_or_comment? body new_line_or_comment?
body : (attribute | block)*
attribute : identifier "=" expression (new_line_or_comment)?
block : identifier (identifier | string_lit)* "{" (new_line_or_comment)? body "}" new_line_or_comment?
new_line_and_or_comma: new_line_or_comment | "," | "," new_line_or_comment
new_line_or_comment: ( /\n/ | /#.*\n/ | /\/\/.*\n/ )+

identifier : /[a-zA-Z_]([a-zA-Z0-9_-]|::)*/

?expression : conditional

?conditional : or_test "?" new_line_or_comment? or_test new_line_or_comment? ":" new_line_or_comment? or_test | or_test

?or_test: (or_test or_op)? and_test
?and_test: (and_test and_op new_line_and_or_comma?)? not_test
?not_test: not_op not_test -> not_test
         | equality

!or_op: "||"
!and_op: "&&"
!not_op: "!"

?equality: (equality eq_op new_line_and_or_comma?)? compare
!eq_op: "==" | "!="

?compare: (compare comp_op new_line_and_or_comma?)? add_expr
!comp_op : "<" | ">" | "<=" | ">="

?add_expr: (add_expr add_op new_line_and_or_comma?)? term
?term: (term mul_op new_line_and_or_comma?)? unary

!add_op: "+"|"-"
!mul_op: "*"|"/"|"%"|"/"

?unary: expr_term
      | neg_op unary -> neg

!neg_op: "-"

expr_term : "(" new_line_or_comment? expression new_line_or_comment? ")" -> paren_expr
            | float_lit
            | int_lit
            | bool_lit
            | null_lit
            | string_lit
            | array
            | object
            | function_call
            | index_expr_term
            | get_attr_expr_term
            | identifier
            | heredoc_template
            | heredoc_template_trim
            | attr_splat_expr_term
            | full_splat_expr_term
            | for_tuple_expr
            | for_object_expr

bool_lit: KEYWORD_TRUE | KEYWORD_FALSE
null_lit: "null"
string_lit: STRING_LIT

KEYWORD_TRUE : "true"
KEYWORD_FALSE : "false"

STRING_LIT : "\"" (STRING_CHARS | INTERPOLATION)* "\""
STRING_CHARS : /(?:(?!\${)([^"\\]|\\.))+/+ // any character except '"" unless inside a interpolation string
NESTED_INTERPOLATION : "${" /[^}]+/ "}"
INTERPOLATION : "${" (/(?:(?!\${)([^}]))+/ | NESTED_INTERPOLATION)+ "}"

int_lit : DECIMAL+
!float_lit: DECIMAL+ "." DECIMAL+ (EXP_MARK DECIMAL+)?
            | DECIMAL+ ("." DECIMAL+)? EXP_MARK DECIMAL+
DECIMAL : "0".."9"
EXP_MARK : ("e" | "E") ("+" | "-")?

array : "[" (new_line_or_comment? expression (new_line_or_comment? "," new_line_or_comment? expression)* new_line_or_comment? ","?)? new_line_or_comment? "]"
object : "{" new_line_or_comment? (object_elem (new_line_and_or_comma object_elem )* new_line_and_or_comma?)? "}"
object_elem : (identifier | expression) ("=" | ":") expression

heredoc_template : /<<(?P<heredoc>[a-zA-Z][a-zA-Z0-9._-]+)\n(?:.|\n)+?\n+\s*(?P=heredoc)/
heredoc_template_trim : /<<-(?P<heredoc_trim>[a-zA-Z][a-zA-Z0-9._-]+)\n(?:.|\n)+?\n+\s*(?P=heredoc_trim)/

function_call : identifier "(" new_line_or_comment? arguments? new_line_or_comment? ")"
arguments : (expression (new_line_or_comment? "," new_line_or_comment?  expression)* ("," | ellipsis)? new_line_or_comment?)

ellipsis : "..."

index_expr_term : expr_term index
get_attr_expr_term : expr_term get_attr
attr_splat_expr_term : expr_term attr_splat
full_splat_expr_term : expr_term full_splat
index : "[" new_line_or_comment? expression new_line_or_comment? "]" | "." int_lit
get_attr : "." identifier
attr_splat : ".*" get_attr*
full_splat : "[*]" (get_attr | index)*

for_tuple_expr : "[" new_line_or_comment? for_intro new_line_or_comment? expression new_line_or_comment? for_cond? new_line_or_comment? "]"
for_object_expr : "{" new_line_or_comment? for_intro new_line_or_comment? expression "=>" new_line_or_comment? expression ellipsis? new_line_or_comment? for_cond? new_line_or_comment? "}"
for_intro : "for" new_line_or_comment? identifier ("," identifier new_line_or_comment?)? new_line_or_comment? "in" new_line_or_comment? expression new_line_or_comment? ":" new_line_or_comment?
for_cond : "if" new_line_or_comment? expression

%ignore /[ \t]+/
%ignore /\/\*(.|\n)*?(\*\/)/
